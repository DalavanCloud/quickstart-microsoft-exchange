{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Conditions": {
    "ByolAmi": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "HostType"
            },
            "Shared"
          ]
        }
      ]
    },
    "HostTypeIsDediHost": {
      "Fn::Equals": [
        {
          "Ref": "HostType"
        },
        "Dedicated Host"
      ]
    },
    "HostTypeIsDefault": {
      "Fn::Equals": [
        {
          "Ref": "HostType"
        },
        "Shared"
      ]
    },
    "IsThreeAz": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "ThirdAZ"
            },
            "no"
          ]
        }
      ]
    },
    "IsTwoNode": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "ThirdAZ"
            },
            "full"
          ]
        }
      ]
    },
    "ThirdAzIsFullNode": {
      "Fn::Equals": [
        {
          "Ref": "ThirdAZ"
        },
        "full"
      ]
    },
    "ThirdAzIsWitness": {
      "Fn::Equals": [
        {
          "Ref": "ThirdAZ"
        },
        "witness"
      ]
    },
    "DeployEdge": {
            "Fn::Equals": [
                {
                    "Ref": "IncludeEdgeTransportRole"
                },
                "yes"
            ]
        },
    "Vol1IsIo1": {
      "Fn::Equals": [
        {
          "Ref": "Volume1Type"
        },
        "io1"
      ]
    },
    "Vol2IsIo1": {
      "Fn::Equals": [
        {
          "Ref": "Volume1Type"
        },
        "io1"
      ]
    },
    "Vol3IsIo1": {
      "Fn::Equals": [
        {
          "Ref": "Volume1Type"
        },
        "io1"
      ]
    },
    "GovCloudCondition": {
        "Fn::Equals": [
            {
                "Ref": "AWS::Region"
            },
            "us-gov-west-1"
        ]
    }
  },
  "Description": "This template deploys two Windows Server Failover Clustering (WSFC) with Exchange Server 2013 or 2016. This template is intended to be installed into an existing VPC that was built using the sample reference architecture titled: \"Implementing Active Directory Domain Services in the AWS Cloud\" **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. 2016 QS(0042) / 2013 (000E)",
  "Mappings": {
    "AWSAMIRegionMap": {
        "AMI": {
            "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2017.05.10",
            "WS2016": "Windows_Server-2016-English-Full-Base-2017.05.22"
        },
        "ap-northeast-1": {
            "WS2012R2": "ami-539aa834",
			        "WS2016": "ami-47c3f820"
        },
        "ap-northeast-2": {
            "WS2012R2": "ami-50e13c3e",
			"WS2016": "ami-6765b809"
        },
        "ap-south-1": {
            "WS2012R2": "ami-67047908",
			"WS2016": "ami-ebd6ab84"
        },
        "ap-southeast-1": {
            "WS2012R2": "ami-9e3bbefd",
			"WS2016": "ami-bad553d9"
        },
        "ap-southeast-2": {
            "WS2012R2": "ami-c4262ca7",
			"WS2016": "ami-bf5743dc"
        },
        "ca-central-1": {
            "WS2012R2": "ami-687ec20c",
			"WS2016": "ami-bf5ee2db"
        },
        "eu-central-1": {
            "WS2012R2": "ami-f9528c96",
			"WS2016": "ami-0f2ff760"
        },
        "eu-west-1": {
            "WS2012R2": "ami-96d4daf0",
			"WS2016": "ami-6e283d08"
        },
        "eu-west-2": {
            "WS2012R2": "ami-07455263",
			"WS2016": "ami-f3021597"
        },
        "sa-east-1": {
            "WS2012R2": "ami-af6708c3",
			"WS2016": "ami-69bed005"
        },
        "us-east-1": {
            "WS2012R2": "ami-271b6d31",
			"WS2016": "ami-f1b5cfe7"
        },
        "us-east-2": {
            "WS2012R2": "ami-7fc4e31a",
			"WS2016": "ami-799bbc1c"
        },
        "us-west-1": {
            "WS2012R2": "ami-59a78139",
			"WS2016": "ami-09406069"
        },
        "us-west-2": {
            "WS2012R2": "ami-3189ec51",
			"WS2016": "ami-c2c3a2a2"
        }
    },
    "ExchangeAMINameMap": {
      "AMI": { "2013": "WS2012R2", "2016": "WS2012R2" }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "ThirdAZ",
            "VPCID",
            "PrivateSubnet1ID",
            "PrivateSubnet2ID",
            "PrivateSubnet3ID",
			"PublicSubnet1ID",
			"PublicSubnet2ID"
          ]
        },
        {
          "Label": {
            "default": "Amazon EC2 Configuration"
          },
          "Parameters": [
            "KeyPairName",
            "HostType",
            "DedicatedHostAMI"
          ]
        },
        {
          "Label": {
            "default": "Microsoft Active Directory Configuration"
          },
          "Parameters": [
            "DomainDNSName",
            "DomainNetBIOSName",
            "DomainAdminUser",
            "DomainAdminPassword",
            "ADServer1NetBIOSName",
            "ADServer1PrivateIP",
            "ADServer2NetBIOSName",
            "ADServer2PrivateIP",
            "DomainMemberSGID"
          ]
        },
        {
          "Label": {
            "default": "Microsoft Exchange Server Configuration"
          },
          "Parameters": [
            "ExchangeServerVersion",
			      "IncludeEdgeTransportRole",
            "EdgeInstanceType",
			      "EdgeNode1NetBIOSName",
            "EdgeNode1PrivateIP1",
			      "EdgeNode2NetBIOSName",
            "EdgeNode2PrivateIP1",
            "Volume1Size",
            "Volume1Type",
            "Volume1Iops",
            "Volume2Size",
            "Volume2Type",
            "Volume2Iops"
          ]
        },
        {
          "Label": {
            "default": "Failover Cluster Configuration"
          },
          "Parameters": [
            "WSFCFileServerInstanceType",
            "WSFCFileServerNetBIOSName",
            "WSFCFileServerPrivateIP",
            "WSFCNode1InstanceType",
            "WSFCNode1NetBIOSName",
            "WSFCNode1PrivateIP1",
            "WSFCNode1PrivateIP2",
            "WSFCNode1PrivateIP3",
            "DedicatedHostIDNode1",
            "WSFCNode2InstanceType",
            "WSFCNode2NetBIOSName",
            "WSFCNode2PrivateIP1",
            "WSFCNode2PrivateIP2",
            "WSFCNode2PrivateIP3",
            "DedicatedHostIDNode2",
            "WSFCNode3InstanceType",
            "WSFCNode3NetBIOSName",
            "WSFCNode3PrivateIP1",
            "WSFCNode3PrivateIP2",
            "WSFCNode3PrivateIP3",
            "DedicatedHostIDNode3"
          ]
        },
        {
          "Label": {
            "default": "AWS Quick Start Configuration"
          },
          "Parameters": [
            "QSS3BucketName",
            "QSS3KeyPrefix"
          ]
        }
      ],
      "ParameterLabels": {
        "ADServer1NetBIOSName": {
          "default": "Domain Controller 1 NetBIOS Name"
        },
        "ADServer1PrivateIP": {
          "default": "Domain Controller 1 Private IP Address"
        },
        "ADServer2NetBIOSName": {
          "default": "Domain Controller 2 NetBIOS Name"
        },
        "ADServer2PrivateIP": {
          "default": "Domain Controller 2 Private IP Address"
        },
        "DedicatedHostAMI": {
          "default": "BYOL AMI to use on dedicated host"
        },
        "DedicatedHostIDNode1": {
          "default": "Dedicated HostID for Node 1 (requires Tenancy set to \"Dedicated Host\")"
        },
        "DedicatedHostIDNode2": {
          "default": "Dedicated HostID for Node 2 (requires Tenancy set to \"Dedicated Host\")"
        },
        "DedicatedHostIDNode3": {
          "default": "Dedicated HostID for Node 3 (requires Tenancy set to \"Dedicated Host\")"
        },
        "DomainAdminPassword": {
          "default": "Domain Admin Password"
        },
        "DomainAdminUser": {
          "default": "Domain Admin User Name"
        },
        "DomainDNSName": {
          "default": "Domain DNS Name"
        },
        "DomainMemberSGID": {
          "default": "Security Group ID for AD domain members"
        },
        "DomainNetBIOSName": {
          "default": "Domain NetBIOS Name"
        },
        "ExchangeServerVersion": {
          "default": "Exchange Server version"
        },
        "EdgeInstanceType": {
          "default": "Instance type for Edge server"
        },
        "IncludeEdgeTransportRole": {
          "default": "Include Edge Server"
        },
        "HostType": {
          "default": "Tenancy"
        },
        "KeyPairName": {
          "default": "Key Pair Name"
        },
        "PrivateSubnet1ID": {
          "default": "Private Subnet 1 ID"
        },
        "PrivateSubnet2ID": {
          "default": "Private Subnet 2 ID"
        },
        "PrivateSubnet3ID": {
          "default": "Private Subnet 3 ID (Optional)"
        },
		 "PublicSubnet1ID": {
          "default": "Public Subnet 1 ID (Edge, optional)"
        },
		 "PublicSubnet2ID": {
          "default": "Private Subnet 2 ID (Edge, optional)"
        },
        "QSS3BucketName": {
          "default": "Quick Start S3 Bucket Name"
        },
        "QSS3KeyPrefix": {
          "default": "Quick Start S3 Key Prefix"
        },
        "ThirdAZ": {
          "default": "Third AZ"
        },
        "VPCID": {
          "default": "VPC to place Exchange cluster in"
        },
        "Volume1Iops": {
          "default": "Data Volume IOPS"
        },
        "Volume1Size": {
          "default": "Data Volume Size (GiB)"
        },
        "Volume1Type": {
          "default": "Data Volume Type"
        },
        "Volume2Iops": {
          "default": "Logs Volume IOPS"
        },
        "Volume2Size": {
          "default": "Logs Volume Size (GiB)"
        },
        "Volume2Type": {
          "default": "Logs Volume Type"
        },
        "WSFCFileServerInstanceType": {
          "default": "File Server Instance Type"
        },
        "WSFCFileServerNetBIOSName": {
          "default": "File Server NetBIOS Name"
        },
        "WSFCFileServerPrivateIP": {
          "default": "File Server Private IP Address"
        },
        "WSFCNode1InstanceType": {
          "default": "Instance Type for Cluster Node 1"
        },
        "WSFCNode1NetBIOSName": {
          "default": "Cluster Node 1 NetBIOS Name"
        },
        "WSFCNode1PrivateIP1": {
          "default": "Cluster Node 1 Private IP Address 1"
        },
        "WSFCNode1PrivateIP2": {
          "default": "Cluster Node 1 Private IP Address 2"
        },
        "WSFCNode1PrivateIP3": {
          "default": "Cluster Node 1 Private IP Address 3"
        },
        "WSFCNode2InstanceType": {
          "default": "Instance Type for Cluster Node 2"
        },
        "WSFCNode2NetBIOSName": {
          "default": "Cluster Node 2 NetBIOS Name"
        },
        "WSFCNode2PrivateIP1": {
          "default": "Cluster Node 2 Private IP Address 1"
        },
        "WSFCNode2PrivateIP2": {
          "default": "Cluster Node 2 Private IP Address 2"
        },
        "WSFCNode2PrivateIP3": {
          "default": "Cluster Node 2 Private IP Address 3"
        },
        "WSFCNode3InstanceType": {
          "default": "Instance Type for Cluster Node 3 (Optional)"
        },
        "WSFCNode3NetBIOSName": {
          "default": "Cluster Node 3 NetBIOS Name"
        },
        "WSFCNode3PrivateIP1": {
          "default": "Cluster Node 3 Private IP Address 1"
        },
        "WSFCNode3PrivateIP2": {
          "default": "Cluster Node 3 Private IP Address 2"
        },
        "WSFCNode3PrivateIP3": {
          "default": "Cluster Node 3 Private IP Address 3"
        },
		"EdgeNode1NetBIOSName": {
          "default": "Edge Node 1 NetBIOS Name"
        },
		"EdgeNode1PrivateIP1": {
          "default": "Edge Node 1 Private IP Address"
        },
		"EdgeNode2NetBIOSName": {
          "default": "Edge Node 2 NetBIOS Name"
        },
		"EdgeNode2PrivateIP1": {
          "default": "Edge Node 2 Private IP Address"
        }
      }
    }
  },
  "Outputs": {
    "DomainAdmin": {
      "Description": "Domain administrator account",
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Ref": "DomainNetBIOSName"
            },
            "\\",
            {
              "Ref": "DomainAdminUser"
            }
          ]
        ]
      }
    },
    "LocalAdmin": {
      "Description": "Please retrieve Administrator password of the instance",
      "Value": "Administrator"
    },
    "WSFCNode1NetBIOSName": {
      "Description": "NetBIOS name of the 1st WSFC Node",
      "Value": {
        "Ref": "WSFCNode1NetBIOSName"
      }
    },
    "WSFCNode2NetBIOSName": {
      "Description": "NetBIOS name of the 2nd WSFC Node",
      "Value": {
        "Ref": "WSFCNode2NetBIOSName"
      }
    },
    "WSFCNode3NetBIOSName": {
      "Condition": "ThirdAzIsFullNode",
      "Description": "NetBIOS name of the 3rd WSFC Node",
      "Value": {
        "Ref": "WSFCNode3NetBIOSName"
      }
    }
  },
  "Parameters": {
    "ADServer1NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "DC1",
      "Description": "NetBIOS name of the first Active Directory server (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "ADServer1PrivateIP": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.0.10",
      "Description": "Fixed private IP for the first Active Directory server located in Availability Zone 1",
      "Type": "String"
    },
    "ADServer2NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "DC2",
      "Description": "NetBIOS name of the second Active Directory server (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "ADServer2PrivateIP": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.32.10",
      "Description": "Fixed private IP for the second Active Directory server located in Availability Zone 2",
      "Type": "String"
    },
    "DedicatedHostAMI": {
      "Default": "",
      "Description": "If host type is set to \"Dedicated\" or \"Dedicated Host\", you need to specify your imported BYOL AMI id",
      "Type": "String"
    },
    "DedicatedHostIDNode1": {
      "Default": "",
      "Description": "Dedicated HostID for Node1, Only used if HostType is set to \"host\"",
      "Type": "String"
    },
    "DedicatedHostIDNode2": {
      "Default": "",
      "Description": "Dedicated HostID for Node2, Only used if HostType is set to \"host\"",
      "Type": "String"
    },
    "DedicatedHostIDNode3": {
      "Default": "",
      "Description": "Dedicated HostID for the optional Node3, Only used if HostType is set to \"host\"",
      "Type": "String"
    },
    "DomainAdminPassword": {
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
      "MaxLength": "32",
      "MinLength": "8",
      "NoEcho": "true",
      "Type": "String"
    },
    "DomainAdminUser": {
      "AllowedPattern": "[a-zA-Z0-9]*",
      "Default": "StackAdmin",
      "Description": "User name for the account that will be used as Domain Administrator. This is separate from the default \"Administrator\" account",
      "MaxLength": "25",
      "MinLength": "5",
      "Type": "String"
    },
    "DomainDNSName": {
      "AllowedPattern": "[a-zA-Z0-9]+\\..+",
      "Default": "example.com",
      "Description": "Fully qualified domain name (FQDN) e.g. example.com",
      "MaxLength": "25",
      "MinLength": "3",
      "Type": "String"
    },
    "DomainMemberSGID": {
      "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "DomainNetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "EXAMPLE",
      "Description": "NetBIOS name of the domain (up to 15 characters) for users of earlier versions of Windows e.g. EXAMPLE",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "ExchangeServerVersion": {
      "AllowedValues": [
        "2016",
        "2013"
      ],
      "Default": "2013",
      "Description": "Version of Exchange Server to install on WSFC Nodes. Options include either \"2013\" or \"2016\"",
      "Type": "String"
    },
    "HostType": {
      "AllowedValues": [
        "Shared",
        "Dedicated",
        "Dedicated Host"
      ],
      "Default": "Shared",
      "Description": "Host Type, NB: For dedicated types, you must already have suitable dedicated hosts in your account",
      "Type": "String"
    },
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "PrivateSubnet1ID": {
      "Description": "ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet2ID": {
      "Description": "ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet3ID": {
      "Default": "",
      "Description": "ID of the optional private subnet 3 in Availability Zone 3 (e.g., subnet-a0246dcd)",
      "Type": "String"
    },
	  "PublicSubnet1ID": {
      "Description": "ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnet2ID": {
      "Description": "ID of the public subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "QSS3BucketName": {
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
      "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Default": "madarasa-quickstart-reference",
      "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
      "Type": "String"
    },
    "QSS3KeyPrefix": {
      "AllowedPattern": "^[0-9a-zA-Z-/]*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Default": "microsoft/exchange/latest/",
      "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Type": "String"
    },
    "EdgeInstanceType": {
        "Description": "Amazon EC2 instance type for the Exchange Edge Transport Servers",
        "Type": "String",
        "Default": "t2.large",
        "AllowedValues": [
            "t2.large",
            "m4.large",
            "m4.xlarge",
            "m4.2xlarge"
        ],
        "ConstraintDescription": "Select a general purpose instance type"
    },
    "IncludeEdgeTransportRole": {
        "AllowedValues": [
            "yes",
            "no"

        ],
        "Default": "no",
        "Description": "Set this parameter to yes to include Exchange Edge Transport servers in the public subnets",
        "Type": "String"
    },
    "ThirdAZ": {
      "AllowedValues": [
        "no",
        "witness",
        "full"
      ],
      "Default": "no",
      "Description": "Enable a 3 AZ deployment, the 3rd AZ can either be used just for the witness, or can be a full Exchange cluster node.",
      "Type": "String"
    },
    "VPCID": {
      "Description": "ID of the VPC (e.g., vpc-0343606e)",
      "Type": "AWS::EC2::VPC::Id"
    },
    "Volume1Iops": {
      "Default": "1000",
      "Description": "Iops for the Exchange Data drive (Only used when volume type is io1)",
      "MaxValue": "20000",
      "MinValue": "100",
      "Type": "Number"
    },
    "Volume1Size": {
      "Default": "500",
      "Description": "Volume size for the Exchange Data drive",
      "MaxValue": "16000",
      "MinValue": "100",
      "Type": "Number"
    },
    "Volume1Type": {
      "AllowedValues": [
        "gp2",
        "io1"
      ],
      "Default": "gp2",
      "Description": "Volume type for the Exchange Data drive",
      "Type": "String"
    },
    "Volume2Iops": {
      "Default": "1000",
      "Description": "Iops for the Exchange drive (Only used when volume type is io1)",
      "MaxValue": "20000",
      "MinValue": "100",
      "Type": "Number"
    },
    "Volume2Size": {
      "Default": "500",
      "Description": "Volume size for the Exchange Logs drive",
      "MaxValue": "16000",
      "MinValue": "100",
      "Type": "Number"
    },
    "Volume2Type": {
      "AllowedValues": [
        "gp2",
        "io1"
      ],
      "Default": "gp2",
      "Description": "Volume type for the Exchange Logs drive",
      "Type": "String"
    },
    "WSFCFileServerInstanceType": {
      "Default": "t2.small",
      "Description": "Amazon EC2 instance type for a fileserver used to share install media, witness and replication folders",
      "Type": "String"
    },
    "WSFCFileServerNetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "WSFCFileServer",
      "Description": "NetBIOS name of the WSFCFileServer (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "WSFCFileServerPrivateIP": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.0.200",
      "Description": "Primary private IP for the fileserver located in Availability Zone 1",
      "Type": "String"
    },
    "WSFCNode1InstanceType": {
      "AllowedValues": [
        "m4.xlarge",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge allowed",
      "Default": "r3.2xlarge",
      "Description": "Amazon EC2 instance type for the first WSFC Node",
      "Type": "String"
    },
    "WSFCNode1NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "WSFCNode1",
      "Description": "NetBIOS name of the first WSFC Node (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "WSFCNode1PrivateIP1": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.0.100",
      "Description": "Primary private IP for the first WSFC Node located in Availability Zone 1",
      "Type": "String"
    },
    "WSFCNode1PrivateIP2": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.0.101",
      "Description": "Secondary private IP for WSFC cluster on first WSFC Node",
      "Type": "String"
    },
    "WSFCNode1PrivateIP3": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.0.102",
      "Description": "Third private IP for Availability Group Listener on first WSFC Node",
      "Type": "String"
    },
    "WSFCNode2InstanceType": {
      "AllowedValues": [
        "m4.xlarge",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge allowed",
      "Default": "r3.2xlarge",
      "Description": "Amazon EC2 instance type for the second WSFC Node",
      "Type": "String"
    },
    "WSFCNode2NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "WSFCNode2",
      "Description": "NetBIOS name of the second WSFC Node (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "WSFCNode2PrivateIP1": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.32.100",
      "Description": "Primary private IP for the second WSFC Node located in Availability Zone 2",
      "Type": "String"
    },
    "WSFCNode2PrivateIP2": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.32.101",
      "Description": "Secondary private IP for WSFC cluster on second WSFC Node",
      "Type": "String"
    },
    "WSFCNode2PrivateIP3": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.32.102",
      "Description": "Third private IP for Availability Group Listener on second WSFC Node",
      "Type": "String"
    },
    "WSFCNode3InstanceType": {
      "AllowedValues": [
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge"
      ],
      "ConstraintDescription": "Only EBS Optimized instance types r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge allowed",
      "Default": "r3.2xlarge",
      "Description": "Amazon EC2 instance type for the second WSFC Node",
      "Type": "String"
    },
    "WSFCNode3NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "WSFCNode3",
      "Description": "NetBIOS name of the second WSFC Node (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "WSFCNode3PrivateIP1": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.64.100",
      "Description": "Primary private IP for the optional third WSFC Node located in Availability Zone 3",
      "Type": "String"
    },
    "WSFCNode3PrivateIP2": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.64.101",
      "Description": "Secondary private IP for WSFC cluster on optional third WSFC Node",
      "Type": "String"
    },
    "WSFCNode3PrivateIP3": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.64.102",
      "Description": "Third private IP for Availability Group Listener on optional third WSFC Node",
      "Type": "String"
    },
	  "EdgeNode1NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "EdgeNode1",
      "Description": "NetBIOS name of the first Edge Server (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "EdgeNode1PrivateIP1": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.128.12",
      "Description": "Primary private IP for the first Edge Server located in Availability Zone 1",
      "Type": "String"
    },
	  "EdgeNode2NetBIOSName": {
      "AllowedPattern": "[a-zA-Z0-9]+",
      "Default": "EdgeNode2",
      "Description": "NetBIOS name of the second Edge Server (up to 15 characters)",
      "MaxLength": "15",
      "MinLength": "1",
      "Type": "String"
    },
    "EdgeNode2PrivateIP1": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
      "Default": "10.0.144.12",
      "Description": "Primary private IP for the second Edge Server located in Availability Zone 1",
      "Type": "String"
    }
  },
  "Resources": {
    "ExchangeServerAccessSecurityGroup": {
      "Properties": {
        "GroupDescription": "Allows access to Exchange Servers",
        "VpcId": {
          "Ref": "VPCID"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "WSFCClientSecurityGroup": {
      "Properties": {
        "GroupDescription": "Exchange Client access ports",
        "SecurityGroupIngress": [
          {
            "FromPort": "1433",
            "IpProtocol": "tcp",
            "SourceSecurityGroupId": {
              "Ref": "ExchangeServerAccessSecurityGroup"
            },
            "ToPort": "1433"
          }
        ],
        "VpcId": {
          "Ref": "VPCID"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "WSFCFileServerWaitCondition": {
      "Condition": "IsTwoNode",
      "DependsOn": "WSFCFileServer",
      "Properties": {
        "Handle": {
          "Ref": "WSFCFileServerWaitHandle"
        },
        "Timeout": "3600"
      },
      "Type": "AWS::CloudFormation::WaitCondition"
    },
    "WSFCFileServerWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WSFCNode1WaitCondition": {
      "DependsOn": "WSFCNode1",
      "Properties": {
        "Handle": {
          "Ref": "WSFCNode1WaitHandle"
        },
        "Timeout": "9000"
      },
      "Type": "AWS::CloudFormation::WaitCondition"
    },
    "WSFCNode1WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WSFCNode2WaitCondition": {
      "DependsOn": "WSFCNode2",
      "Properties": {
        "Handle": {
          "Ref": "WSFCNode2WaitHandle"
        },
        "Timeout": "9000"
      },
      "Type": "AWS::CloudFormation::WaitCondition"
    },
    "WSFCNode2WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WSFCNode3WaitCondition": {
      "Condition": "ThirdAzIsFullNode",
      "DependsOn": "WSFCNode3",
      "Properties": {
        "Handle": {
          "Ref": "WSFCNode3WaitHandle"
        },
        "Timeout": "9000"
      },
      "Type": "AWS::CloudFormation::WaitCondition"
    },
    "WSFCNode3WaitHandle": {
      "Condition": "ThirdAzIsFullNode",
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "EdgeNode1WaitCondition": {
      "Condition": "DeployEdge",
      "DependsOn": "EDGE1",
      "Properties": {
        "Handle": {
          "Ref": "EdgeNode1WaitHandle"
        },
        "Timeout": "9000"
      },
      "Type": "AWS::CloudFormation::WaitCondition"
    },
    "EdgeNode1WaitHandle": {
      "Condition": "DeployEdge",
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "WSFCFileServer": {
      "Condition": "IsTwoNode",
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
              "S3AccessCreds": {
                  "type": "S3",
                  "roleName": {
                      "Ref": "ExchangeRole"
                  },
                  "buckets": [
                      {
                          "Ref": "QSS3BucketName"
                      }
                  ]
              }
          },
        "AWS::CloudFormation::Init": {
          "Cleanup": {
          },
          "Configure": {
          },
          "Finalize": {
            "commands": {
              "a-signal-success": {
                "command": "powershell -Command \"Write-AWSQuickStartStatus\""
              }
            }
          },
          "Install": {
          },
          "Prep": {
            "commands": {
              "a-rename-computer": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '",
                      {
                        "Ref": "WSFCFileServerNetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "b-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "c-Invoke-ADReplication-DC1": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer1NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "d-Invoke-ADReplication-DC2": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer2NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "15"
              }
            }
          },
          "setup": {
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "WSFCFileServerWaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "files": {
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WSFCFileServer.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r WSFCFileServer",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Join-Domain.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Create-Share.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Create-Share.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Invoke-ADReplication.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Invoke-ADReplication.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Rename-Computer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Set-Dns.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "configSets": {
            "config": [
              "setup",
              "Prep",
              "Install",
              "Configure",
              "Cleanup",
              "Finalize"
            ]
          }
        }
      },
      "Properties": {
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "WS2012R2"
          ]
        },
        "IamInstanceProfile": {
            "Ref": "ExchangeProfile"
        },
        "InstanceType": {
          "Ref": "WSFCFileServerInstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "GroupSet": [
              {
                "Ref": "DomainMemberSGID"
              },
              {
                "Ref": "WSFCSecurityGroup"
              },
              {
                "Ref": "WSFCClientSecurityGroup"
              }
            ],
            "PrivateIpAddresses": [
              {
                "Primary": "true",
                "PrivateIpAddress": {
                  "Ref": "WSFCFileServerPrivateIP"
                }
              }
            ],
            "SubnetId": {
              "Fn::If": [
                "ThirdAzIsWitness",
                {
                  "Ref": "PrivateSubnet3ID"
                },
                {
                  "Ref": "PrivateSubnet1ID"
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "WSFCFileServerNetBIOSName"
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r WSFCFileServer ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "WSFCNode1": {
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
            "S3AccessCreds": {
                "type": "S3",
                "roleName": {
                    "Ref": "ExchangeRole"
                },
                "buckets": [
                    {
                        "Ref": "QSS3BucketName"
                    }
                ]
            }
        },
        "AWS::CloudFormation::Init": {
          "Cleanup": {
            "commands": {
              "a-disable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\DisableCredSsp.ps1\"",
                "waitAfterCompletion": "0"
              },
              "b-enable-uac": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Enable\"",
                "waitAfterCompletion": "0"
              }

            }
          },
          "Finalize": {
            "commands": {
              "a-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "b-signal-success": {
                "command": "powershell -Command \"Write-AWSQuickStartStatus\""
              }
            }
          },
          "Install": {
            "commands": {
              "a-install-ucma-runtime": {
                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-UcmaRuntime.ps1\"",
                "waitAfterCompletion": "0"
              },
              "b-install-exchange-organization": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchangeOrg.ps1 -DomainNetBIOSName '",
                                            {
                                                "Ref": "DomainNetBIOSName"
                                            },
                                            "' -DomainAdminUser '",
                                            {
                                                "Ref": "DomainAdminUser"
                                            },
                                            "' -DomainAdminPassword '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "' -ExchangeServerVersion '",
                                            {
                                                "Ref": "ExchangeServerVersion"
                                            },
                                            "'\""
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
              "c-install-exchange": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchangeServer.ps1 -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                          "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                          "Ref": "DomainAdminPassword"
                      },
                      "' -ExchangeServerVersion '",
                      {
                          "Ref": "ExchangeServerVersion"
                      },
                      "' -ServerIndex '1",
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            }
          },
          "Prep": {
            "commands": {
              "a-rename-computer": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '",
                      {
                        "Ref": "WSFCNode1NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "b-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "c-install-windows-failover-clustering": {
                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1\"",
                "waitAfterCompletion": "0"
              },
              "d-install-exchange-prerequisites": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchPrerequisites.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "e-enable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\EnableCredSsp.ps1",
                "waitAfterCompletion": "0"
              },
              "f-disable-uac": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Disable\"",
                "waitAfterCompletion": "0"
              },
              "g-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "h-download-netframework": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Download-NetFramework.ps1\"",
                "waitAfterCompletion": "0"
              },
              "i-install-netframework": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-NetFramework.ps1 -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                          "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                          "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "j-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "k-open-WSFC-ports": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"",
                "waitAfterCompletion": "0"
              },
              "l-Invoke-ADReplication-DC1": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer1NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "m-Invoke-ADReplication-DC2": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer2NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "15"
              },
              "n-download-exchange-kit": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-ExecutionPolicy RemoteSigned ",
                      "-Command \"",
                      " C:\\cfn\\scripts\\Download-ExchangeKit.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "o-expand-exchange-kit": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-ExecutionPolicy RemoteSigned ",
                      "-Command \"",
                      " C:\\cfn\\scripts\\Expand-Exchange.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "p-download-ucmaruntime": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Download-UcmaRuntime.ps1",
                "waitAfterCompletion": "0"
              }
            }
          },
          "setup": {
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "WSFCNode1WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "files": {
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WSFCNode1.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r WSFCNode1",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Invoke-ADReplication.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Invoke-ADReplication.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Rename-Computer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Join-Domain.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Set-Dns.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Download-ExchangeKit.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-ExchangeKit.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\EnableCredSsp.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/EnableCredSsp.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\DisableCredSsp.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/DisableCredSsp.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Download-UcmaRuntime.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-UcmaRuntime.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchPrerequisites.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchPrerequisites.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Expand-Exchange.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Expand-Exchange.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-WindowsFailoverClustering.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-UcmaRuntime.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-UcmaRuntime.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchangeOrg.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeOrg.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchangeServer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeServer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\OpenWSFCPorts.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Configure-UAC.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-UAC.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Configure-ExchangeDAG.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-ExchangeDAG.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Download-NetFramework.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-NetFramework.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Install-NetFramework.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NetFramework.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Add-ExchangeGroup.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Add-ExchangeGroup.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "configSets": {
            "config": [
              "setup",
              "Prep",
              "Install",
              "Cleanup",
              "Finalize"
            ]
          }
        }
      },
      "Properties": {
        "Affinity": {
          "Fn::If": [
            "HostTypeIsDediHost",
            "host",
            {
              "Fn::If": [
                "HostTypeIsDefault",
                {
                  "Ref": "AWS::NoValue"
                },
                "default"
              ]
            }
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          },
          {
            "DeviceName": "/dev/xvdca",
            "VirtualName": "ephemeral0"
          }
        ],
        "EbsOptimized": "true",
        "HostId": {
          "Fn::If": [
            "HostTypeIsDediHost",
            {
              "Ref": "DedicatedHostIDNode1"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ImageId": {
          "Fn::If": [
            "ByolAmi",
            {
              "Ref": "DedicatedHostAMI"
            },
            {
              "Fn::FindInMap": [
                "AWSAMIRegionMap",
                {
                  "Ref": "AWS::Region"
                },
                {
                  "Fn::FindInMap": [
                    "ExchangeAMINameMap",
                    "AMI",
                    {
                      "Ref": "ExchangeServerVersion"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "IamInstanceProfile": {
            "Ref": "ExchangeProfile"
        },
        "InstanceType": {
          "Ref": "WSFCNode1InstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "GroupSet": [
              {
                "Ref": "DomainMemberSGID"
              },
              {
                "Ref": "WSFCSecurityGroup"
              },
              {
                "Ref": "WSFCClientSecurityGroup"
              }
            ],
            "PrivateIpAddresses": [
              {
                "Primary": "true",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode1PrivateIP1"
                }
              },
              {
                "Primary": "false",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode1PrivateIP2"
                }
              },
              {
                "Primary": "false",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode1PrivateIP3"
                }
              }
            ],
            "SubnetId": {
              "Ref": "PrivateSubnet1ID"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "WSFCNode1NetBIOSName"
            }
          }
        ],
        "Tenancy": {
          "Fn::If": [
            "HostTypeIsDediHost",
            "host",
            {
              "Fn::If": [
                "HostTypeIsDefault",
                "default",
                "dedicated"
              ]
            }
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r WSFCNode1 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "WSFCNode2": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "PseudoDependsOn": {
                    "Fn::If": [
                        "IsTwoNode",
                        [
                            {
                                "Ref": "WSFCFileServerWaitCondition"
                            },
                            {
                                "Ref": "WSFCNode1WaitCondition"
                            }
                        ],
                        [
                            {
                                "Ref": "WSFCNode1WaitCondition"
                            },
                            {
                                "Ref": "WSFCNode3WaitCondition"
                            }
                        ]
                    ]
                },
              "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "ExchangeRole"
                        },
                        "buckets": [
                            {
                                "Ref": "QSS3BucketName"
                            }
                        ]
                    }
                },
              "AWS::CloudFormation::Init": {
          "Cleanup": {
            "commands": {
              "a-disable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\DisableCredSsp.ps1\"",
                "waitAfterCompletion": "0"
              },
              "b-enable-uac": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Enable\"",
                "waitAfterCompletion": "0"
              }

            }
          },
          "Finalize": {
            "commands": {
              "a-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "b-signal-success": {
                "command": "powershell -Command \"Write-AWSQuickStartStatus\""
              }
            }
          },
          "Install": {
            "commands": {
              "a-install-ucma-runtime": {
                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-UcmaRuntime.ps1",
                "waitAfterCompletion": "0"
              },
              "b-install-exchange": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchangeServer.ps1 -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                          "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                          "Ref": "DomainAdminPassword"
                      },
                      "' -ExchangeServerVersion '",
                      {
                          "Ref": "ExchangeServerVersion"
                      },
                      "' -ServerIndex '2",
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "c-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              }
            }
          },
          "Prep": {
            "commands": {
              "a-rename-computer": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '",
                      {
                        "Ref": "WSFCNode2NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "b-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "c-install-windows-failover-clustering": {
                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1\"",
                "waitAfterCompletion": "0"
              },
              "d-install-exchange-prerequisites": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchPrerequisites.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "e-enable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\EnableCredSsp.ps1",
                "waitAfterCompletion": "0"
              },
              "f-disable-uac": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Disable\"",
                "waitAfterCompletion": "0"
              },
              "g-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "h-download-netframework": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Download-NetFramework.ps1\"",
                "waitAfterCompletion": "0"
              },
              "i-install-netframework": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-NetFramework.ps1 -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                          "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                          "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "j-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "k-open-WSFC-ports": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"",
                "waitAfterCompletion": "0"
              },
              "l-Invoke-ADReplication-DC1": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer1NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "m-Invoke-ADReplication-DC2": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer2NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "15"
              },
              "n-download-exchange-kit": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-ExecutionPolicy RemoteSigned ",
                      "-Command \"",
                      " C:\\cfn\\scripts\\Download-ExchangeKit.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "o-expand-exchange-kit": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-ExecutionPolicy RemoteSigned ",
                      "-Command \"",
                      " C:\\cfn\\scripts\\Expand-Exchange.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "p-download-ucmaruntime": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Download-UcmaRuntime.ps1",
                "waitAfterCompletion": "0"
              }
            }
          },
          "setup": {
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "WSFCNode2WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "files": {
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WSFCNode2.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r WSFCNode2",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Invoke-ADReplication.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Invoke-ADReplication.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Rename-Computer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Join-Domain.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Set-Dns.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Download-ExchangeKit.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-ExchangeKit.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\EnableCredSsp.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/EnableCredSsp.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\DisableCredSsp.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/DisableCredSsp.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Create-Share.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Create-Share.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Download-UcmaRuntime.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-UcmaRuntime.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchPrerequisites.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchPrerequisites.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Expand-Exchange.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Expand-Exchange.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-WindowsFailoverClustering.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-UcmaRuntime.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-UcmaRuntime.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchangeOrg.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeOrg.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchangeServer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeServer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\OpenWSFCPorts.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Configure-UAC.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-UAC.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Configure-ExchangeDAG.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-ExchangeDAG.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Download-NetFramework.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-NetFramework.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Install-NetFramework.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NetFramework.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Add-ExchangeGroup.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Add-ExchangeGroup.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "Configure": {
              "commands": {
                  "a-create-dag-share": {
                      "Fn::If": [
                          "IsTwoNode",
                          {
                              "command": {
                                  "Fn::Join": [
                                      "",
                                      [
                                          "powershell.exe -Command \"C:\\cfn\\scripts\\Create-Share.ps1",
                                          " -Path 'c:\\DAG'",
                                          " -FolderPath 'c:\\'",
                                          " -FolderName 'DAG",
                                          "' -ShareName 'DAG.example.com",
                                          "' -DomainNetBIOSName '",
                                          {
                                              "Ref": "DomainNetBIOSName"
                                          },
                                          "' -DomainAdminUser '",
                                          {
                                              "Ref": "DomainAdminUser"
                                          },
                                          "' -DomainAdminPassword '",
                                          {
                                              "Ref": "DomainAdminPassword"
                                          },
                                          "' -ServerName '",
                                          {
                                              "Ref": "WSFCFileServerNetBIOSName"
                                          },
                                          "'\""
                                      ]
                                  ]
                              },
                              "waitAfterCompletion": "0"
                          },
                          {
                              "Ref": "AWS::NoValue"
                          }
                      ]
                  },
                  "d-Invoke-ADReplication-DC1": {
                      "Fn::If": [
                          "IsTwoNode",
                          {
                              "command": {
                                  "Fn::Join": [
                                      "",
                                      [
                                          "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                                          " -UserName '",
                                          {
                                              "Ref": "DomainAdminUser"
                                          },
                                          "' -Password '",
                                          {
                                              "Ref": "DomainAdminPassword"
                                          },
                                          "' -DomainController '",
                                          {
                                              "Ref": "ADServer1NetBIOSName"
                                          },
                                          "'\""
                                      ]
                                  ]
                              },
                              "waitAfterCompletion": "0"
                          },
                          {
                              "Ref": "AWS::NoValue"
                          }
                      ]
                  },
                  "e-Invoke-ADReplication-DC2": {
                      "Fn::If": [
                          "IsTwoNode",
                          {
                              "command": {
                                  "Fn::Join": [
                                      "",
                                      [
                                          "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                                          " -UserName '",
                                          {
                                              "Ref": "DomainAdminUser"
                                          },
                                          "' -Password '",
                                          {
                                              "Ref": "DomainAdminPassword"
                                          },
                                          "' -DomainController '",
                                          {
                                              "Ref": "ADServer2NetBIOSName"
                                          },
                                          "'\""
                                      ]
                                  ]
                              },
                              "waitAfterCompletion": "0"
                          },
                          {
                              "Ref": "AWS::NoValue"
                          }
                      ]
                  }
              }
          },
          "configSets": {
            "config": [
              "setup",
              "Prep",
              "Install",
              "Configure",
              "Cleanup",
              "Finalize"
            ]
          }
        }
      },
      "Properties": {
        "Affinity": {
          "Fn::If": [
            "HostTypeIsDediHost",
            "host",
            {
              "Fn::If": [
                "HostTypeIsDefault",
                {
                  "Ref": "AWS::NoValue"
                },
                "default"
              ]
            }
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          },
          {
            "DeviceName": "/dev/xvdca",
            "VirtualName": "ephemeral0"
          }
        ],
        "EbsOptimized": "true",
        "HostId": {
          "Fn::If": [
            "HostTypeIsDediHost",
            {
              "Ref": "DedicatedHostIDNode1"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ImageId": {
          "Fn::If": [
            "ByolAmi",
            {
              "Ref": "DedicatedHostAMI"
            },
            {
              "Fn::FindInMap": [
                "AWSAMIRegionMap",
                {
                  "Ref": "AWS::Region"
                },
                {
                  "Fn::FindInMap": [
                    "ExchangeAMINameMap",
					"AMI",
                    {
                      "Ref": "ExchangeServerVersion"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "IamInstanceProfile": {
            "Ref": "ExchangeProfile"
        },
        "InstanceType": {
          "Ref": "WSFCNode2InstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "GroupSet": [
              {
                "Ref": "DomainMemberSGID"
              },
              {
                "Ref": "WSFCSecurityGroup"
              },
              {
                "Ref": "WSFCClientSecurityGroup"
              }
            ],
            "PrivateIpAddresses": [
              {
                "Primary": "true",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode2PrivateIP1"
                }
              },
              {
                "Primary": "false",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode2PrivateIP2"
                }
              },
              {
                "Primary": "false",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode2PrivateIP3"
                }
              }
            ],
            "SubnetId": {
              "Ref": "PrivateSubnet2ID"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "WSFCNode2NetBIOSName"
            }
          }
        ],
        "Tenancy": {
          "Fn::If": [
            "HostTypeIsDediHost",
            "host",
            {
              "Fn::If": [
                "HostTypeIsDefault",
                "default",
                "dedicated"
              ]
            }
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r WSFCNode2 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "WSFCNode3": {
      "Condition": "ThirdAzIsFullNode",
      "DependsOn": "WSFCNode1WaitCondition",
      "Metadata": {
        "AWS::CloudFormation::Authentication": {
            "S3AccessCreds": {
                "type": "S3",
                "roleName": {
                    "Ref": "ExchangeRole"
                },
                "buckets": [
                    {
                        "Ref": "QSS3BucketName"
                    }
                ]
            }
        },
        "AWS::CloudFormation::Init": {
          "Cleanup": {
            "commands": {
              "a-disable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\DisableCredSsp.ps1\"",
                "waitAfterCompletion": "0"
              },
              "b-enable-uac": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Enable\"",
                "waitAfterCompletion": "0"
              }
            }
          },
          "Finalize": {
            "commands": {
              "a-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "b-signal-success": {
                "command": "powershell -Command \"Write-AWSQuickStartStatus\""
              }
            }
          },
          "Install": {
            "commands": {
              "a-install-ucma-runtime": {
                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-UcmaRuntime.ps1",
                "waitAfterCompletion": "0"
              },
              "b-install-exchange": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchangeServer.ps1 -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                          "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                          "Ref": "DomainAdminPassword"
                      },
                      "' -ExchangeServerVersion '",
                      {
                          "Ref": "ExchangeServerVersion"
                      },
                      "' -ServerIndex 3'",
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            }
          },
          "Prep": {
            "commands": {
              "a-rename-computer": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '",
                      {
                        "Ref": "WSFCNode3NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "b-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Join-Domain.ps1 -DomainName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "c-install-windows-failover-clustering": {
                "command": "powershell.exe -Command \"C:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1\"",
                "waitAfterCompletion": "0"
              },
              "d-install-exchange-prerequisites": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchPrerequisites.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "e-enable-credssp": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\EnableCredSsp.ps1",
                "waitAfterCompletion": "0"
              },
              "f-disable-uac": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Disable\"",
                "waitAfterCompletion": "0"
              },
              "g-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "h-download-netframework": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Download-NetFramework.ps1\"",
                "waitAfterCompletion": "0"
              },
              "i-install-netframework": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-NetFramework.ps1 -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -DomainAdminUser '",
                      {
                          "Ref": "DomainAdminUser"
                      },
                      "' -DomainAdminPassword '",
                      {
                          "Ref": "DomainAdminPassword"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "j-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "k-open-WSFC-ports": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"",
                "waitAfterCompletion": "0"
              },
              "l-Invoke-ADReplication-DC1": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer1NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "m-Invoke-ADReplication-DC2": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Invoke-ADReplication.ps1",
                      " -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -DomainController '",
                      {
                        "Ref": "ADServer2NetBIOSName"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "15"
              },
              "n-download-exchange-kit": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-ExecutionPolicy RemoteSigned ",
                      "-Command \"",
                      " C:\\cfn\\scripts\\Download-ExchangeKit.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "o-expand-exchange-kit": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-ExecutionPolicy RemoteSigned ",
                      "-Command \"",
                      " C:\\cfn\\scripts\\Expand-Exchange.ps1 -ExchangeServerVersion '",
                      {
                        "Ref": "ExchangeServerVersion"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "p-download-ucmaruntime": {
                "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command C:\\cfn\\scripts\\Download-UcmaRuntime.ps1",
                "waitAfterCompletion": "0"
              }
            }
          },
          "setup": {
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "WSFCNode3WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "files": {
              "c:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.WSFCNode3.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r WSFCNode3",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Invoke-ADReplication.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Invoke-ADReplication.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Rename-Computer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Join-Domain.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Set-Dns.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Download-ExchangeKit.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-ExchangeKit.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\EnableCredSsp.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/EnableCredSsp.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\DisableCredSsp.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/DisableCredSsp.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Download-UcmaRuntime.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-UcmaRuntime.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchPrerequisites.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchPrerequisites.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Expand-Exchange.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Expand-Exchange.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-WindowsFailoverClustering.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-WindowsFailoverClustering.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-UcmaRuntime.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-UcmaRuntime.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchangeOrg.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeOrg.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Install-ExchangeServer.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeServer.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\OpenWSFCPorts.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "c:\\cfn\\scripts\\Configure-UAC.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-UAC.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  },
                  "authentication": "S3AccessCreds"
              },
              "C:\\cfn\\scripts\\Configure-ExchangeDAG.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-ExchangeDAG.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Download-NetFramework.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-NetFramework.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Install-NetFramework.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NetFramework.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              },
              "C:\\cfn\\scripts\\Add-ExchangeGroup.ps1": {
                  "source": {
                      "Fn::Sub": [
                          "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Add-ExchangeGroup.ps1",
                          {
                              "QSS3Region": {
                                  "Fn::If": [
                                      "GovCloudCondition",
                                      "s3-us-gov-west-1",
                                      "s3"
                                  ]
                              }
                          }
                      ]
                  }
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "configSets": {
            "config": [
              "setup",
              "Prep",
              "Install",
              "Cleanup",
              "Finalize"
            ]
          }
        }
      },
      "Properties": {
        "Affinity": {
          "Fn::If": [
            "HostTypeIsDediHost",
            "host",
            {
              "Fn::If": [
                "HostTypeIsDefault",
                {
                  "Ref": "AWS::NoValue"
                },
                "default"
              ]
            }
          ]
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          },
          {
            "DeviceName": "/dev/xvdca",
            "VirtualName": "ephemeral0"
          }
        ],
        "EbsOptimized": "true",
        "HostId": {
          "Fn::If": [
            "HostTypeIsDediHost",
            {
              "Ref": "DedicatedHostIDNode3"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ImageId": {
          "Fn::If": [
            "ByolAmi",
            {
              "Ref": "DedicatedHostAMI"
            },
            {
              "Fn::FindInMap": [
                "AWSAMIRegionMap",
                {
                  "Ref": "AWS::Region"
                },
                {
                  "Fn::FindInMap": [
                    "ExchangeAMINameMap",
					"AMI",
                    {
                      "Ref": "ExchangeServerVersion"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "IamInstanceProfile": {
            "Ref": "ExchangeProfile"
        },
        "InstanceType": {
          "Ref": "WSFCNode3InstanceType"
        },
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "DeviceIndex": 0,
            "GroupSet": [
              {
                "Ref": "DomainMemberSGID"
              },
              {
                "Ref": "WSFCSecurityGroup"
              },
              {
                "Ref": "WSFCClientSecurityGroup"
              }
            ],
            "PrivateIpAddresses": [
              {
                "Primary": "true",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode3PrivateIP1"
                }
              },
              {
                "Primary": "false",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode3PrivateIP2"
                }
              },
              {
                "Primary": "false",
                "PrivateIpAddress": {
                  "Ref": "WSFCNode3PrivateIP3"
                }
              }
            ],
            "SubnetId": {
              "Ref": "PrivateSubnet3ID"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "WSFCNode3NetBIOSName"
            }
          }
        ],
        "Tenancy": {
          "Fn::If": [
            "HostTypeIsDediHost",
            "host",
            {
              "Fn::If": [
                "HostTypeIsDefault",
                "default",
                "dedicated"
              ]
            }
          ]
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r WSFCNode3 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      },
      "Type": "AWS::EC2::Instance"
    },
    "WSFCNode1Volume1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WSFCNode1",
            "AvailabilityZone"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Vol1IsIo1",
            {
              "Ref": "Volume1Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume1Size"
        },
        "VolumeType": {
          "Ref": "Volume1Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "WSFCNode1Volume2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WSFCNode1",
            "AvailabilityZone"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Vol2IsIo1",
            {
              "Ref": "Volume2Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume2Size"
        },
        "VolumeType": {
          "Ref": "Volume2Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "WSFCNode2Volume1": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WSFCNode2",
            "AvailabilityZone"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Vol1IsIo1",
            {
              "Ref": "Volume1Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume1Size"
        },
        "VolumeType": {
          "Ref": "Volume1Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "WSFCNode2Volume2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WSFCNode2",
            "AvailabilityZone"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Vol2IsIo1",
            {
              "Ref": "Volume2Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume2Size"
        },
        "VolumeType": {
          "Ref": "Volume2Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "WSFCNode3Volume1": {
      "Condition": "ThirdAzIsFullNode",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WSFCNode3",
            "AvailabilityZone"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Vol1IsIo1",
            {
              "Ref": "Volume1Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume1Size"
        },
        "VolumeType": {
          "Ref": "Volume1Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "WSFCNode3Volume2": {
      "Condition": "ThirdAzIsFullNode",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "WSFCNode3",
            "AvailabilityZone"
          ]
        },
        "Iops": {
          "Fn::If": [
            "Vol2IsIo1",
            {
              "Ref": "Volume2Iops"
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "Size": {
          "Ref": "Volume2Size"
        },
        "VolumeType": {
          "Ref": "Volume2Type"
        }
      },
      "Type": "AWS::EC2::Volume"
    },
    "WSFCNode1Volume1Attachment": {
      "Properties": {
        "Device": "/dev/xvdf",
        "InstanceId": {
          "Ref": "WSFCNode1"
        },
        "VolumeId": {
          "Ref": "WSFCNode1Volume1"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    },
    "WSFCNode1Volume2Attachment": {
      "Properties": {
        "Device": "/dev/xvdg",
        "InstanceId": {
          "Ref": "WSFCNode1"
        },
        "VolumeId": {
          "Ref": "WSFCNode1Volume2"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    },
    "WSFCNode2Volume1Attachment": {
      "Properties": {
        "Device": "/dev/xvdf",
        "InstanceId": {
          "Ref": "WSFCNode2"
        },
        "VolumeId": {
          "Ref": "WSFCNode2Volume1"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    },
    "WSFCNode2Volume2Attachment": {
      "Properties": {
        "Device": "/dev/xvdg",
        "InstanceId": {
          "Ref": "WSFCNode2"
        },
        "VolumeId": {
          "Ref": "WSFCNode2Volume2"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    },
    "WSFCNode3Volume1Attachment": {
      "Condition": "ThirdAzIsFullNode",
      "Properties": {
        "Device": "/dev/xvdf",
        "InstanceId": {
          "Ref": "WSFCNode3"
        },
        "VolumeId": {
          "Ref": "WSFCNode3Volume1"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    },
    "WSFCNode3Volume2Attachment": {
      "Condition": "ThirdAzIsFullNode",
      "Properties": {
        "Device": "/dev/xvdg",
        "InstanceId": {
          "Ref": "WSFCNode3"
        },
        "VolumeId": {
          "Ref": "WSFCNode3Volume2"
        }
      },
      "Type": "AWS::EC2::VolumeAttachment"
    },
    "EDGE1": {
          "DependsOn": "WSFCNode1WaitCondition",
          "Condition": "DeployEdge",
          "Metadata": {
            "AWS::CloudFormation::Authentication": {
                "S3AccessCreds": {
                    "type": "S3",
                    "roleName": {
                        "Ref": "ExchangeRole"
                    },
                    "buckets": [
                        {
                            "Ref": "QSS3BucketName"
                        }
                    ]
                }
            },
            "AWS::CloudFormation::Init": {
              "Cleanup": {
                "commands": {
                  "a-disable-credssp": {
                    "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\DisableCredSsp.ps1\"",
                    "waitAfterCompletion": "0"
                  },
                  "b-enable-uac": {
                    "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Enable\"",
                    "waitAfterCompletion": "0"
                  }
                }
              },
              "Finalize": {
                "commands": {
                  "a-reboot": {
                    "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                    "waitAfterCompletion": "forever"
                  },
                  "b-signal-success": {
                    "command": "powershell -Command \"Write-AWSQuickStartStatus\""
                  }
                }
              },
              "Install": {
                "commands": {
                  "a-install-exchange-edge": {
                    "command": {
                      "Fn::Join": [
                          "",
                          [
                              "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchangeEdgeServer.ps1 -EdgeNodeNetBIOSName '",
                              {
                                  "Ref": "EdgeNode1NetBIOSName"
                              },
                              "' -DomainAdminPassword '",
                              {
                                  "Ref": "DomainAdminPassword"
                              },
                              "' -ExchangeServerVersion '",
                              {
                                  "Ref": "ExchangeServerVersion"
                              },
                              "'\""
                          ]
                      ]
                    },
                    "waitAfterCompletion": "0"
                  }
                }
              },
              "Prep": {
                "commands": {
                  "a-rename-computer": {
                    "command": {
                      "Fn::Join": [
                        "",
                        [
                          "powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '",
                          {
                            "Ref": "EdgeNode1NetBIOSName"
                          },
                          "'\""
                        ]
                      ]
                    },
                    "waitAfterCompletion": "forever"
                  },
                  "b-install-edge-prerequisites": {
                    "command": {
                      "Fn::Join": [
                        "",
                        [
                          "powershell.exe -Command \"C:\\cfn\\scripts\\Install-EdgePrerequisites.ps1 -ExchangeServerVersion '",
                          {
                            "Ref": "ExchangeServerVersion"
                          },
                          "'\""
                        ]
                      ]
                    },
                    "waitAfterCompletion": "0"
                  },
                  "c-reset-local-admin": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "powershell.exe -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '",
                                            {
                                                "Ref": "DomainAdminPassword"
                                            },
                                            "'"
                                        ]
                                    ]
                                },
                                "waitAfterCompletion": "0"
                            },
                  "d-enable-credssp": {
                              "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\EnableCredSsp.ps1",
                              "waitAfterCompletion": "0"
                            },
                  "e-disable-uac": {
                              "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Disable\"",
                              "waitAfterCompletion": "0"
                            },
                  "f-reboot": {
                    "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                    "waitAfterCompletion": "forever"
                  },
                  "g-download-netframework": {
                    "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Download-NetFramework.ps1\"",
                    "waitAfterCompletion": "0"
                  },
                  "h-install-netframework": {
                    "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Install-NetFramework.ps1\"",
                    "waitAfterCompletion": "60"
                  },
                  "i-reboot": {
                    "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                    "waitAfterCompletion": "forever"
                  },
                  "j-open-WSFC-ports": {
                    "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"",
                    "waitAfterCompletion": "0"
                  },
                  "k-create-edge-dnsrecord": {
                    "command": {
                      "Fn::Join": [
                          "",
                          [
                              "powershell.exe -Command \"C:\\cfn\\scripts\\Configure-EdgeDnsRecord.ps1 -EdgeNodeNetBIOSName '",
                              {
                                  "Ref": "EdgeNode1NetBIOSName"
                              },
                              "' -EdgeNodePrivateIP '",
                              {
                                  "Ref": "EdgeNode1PrivateIP1"
                              },
                              "' -DnsServer '",
                              {
                                  "Ref": "ADServer1PrivateIP"
                              },
                              "' -DomainNetBIOSName '",
                              {
                                  "Ref": "DomainDNSName"
                              },
                              "' -DomainAdminUser '",
                              {
                                  "Ref": "DomainAdminUser"
                              },
                              "' -DomainAdminPassword '",
                              {
                                  "Ref": "DomainAdminPassword"
                              },

                              "'\""
                          ]
                      ]
                    },
                    "waitAfterCompletion": "0"
                  },
                  "l-download-exchange-kit": {
                    "command": {
                      "Fn::Join": [
                        "",
                        [
                          "powershell.exe ",
                          "-ExecutionPolicy RemoteSigned ",
                          "-Command \"",
                          " C:\\cfn\\scripts\\Download-ExchangeKit.ps1 -ExchangeServerVersion '",
                          {
                            "Ref": "ExchangeServerVersion"
                          },
                          "'\""
                        ]
                      ]
                    },
                    "waitAfterCompletion": "0"
                  },
                  "m-expand-exchange-kit": {
                    "command": {
                      "Fn::Join": [
                        "",
                        [
                          "powershell.exe ",
                          "-ExecutionPolicy RemoteSigned ",
                          "-Command \"",
                          " C:\\cfn\\scripts\\Expand-Exchange.ps1 -ExchangeServerVersion '",
                          {
                            "Ref": "ExchangeServerVersion"
                          },
                          "'\""
                        ]
                      ]
                    },
                    "waitAfterCompletion": "0"
                  }
                }
              },
              "setup": {
                "commands": {
                  "a-set-execution-policy": {
                    "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                    "waitAfterCompletion": "0"
                  },
                  "b-unpack-quickstart-module": {
                    "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                    "waitAfterCompletion": "0"
                  },
                  "c-init-quickstart-module": {
                    "command": {
                      "Fn::Join": [
                        "",
                        [
                          "powershell.exe -Command \"",
                          "New-AWSQuickStartWaitHandle -Handle '",
                          {
                            "Ref": "EdgeNode1WaitHandle"
                          },
                          "'\""
                        ]
                      ]
                    },
                    "waitAfterCompletion": "0"
                  }
                },
                "files": {
                  "c:\\cfn\\cfn-hup.conf": {
                    "content": {
                      "Fn::Join": [
                        "",
                        [
                          "[main]\n",
                          "stack=",
                          {
                            "Ref": "AWS::StackId"
                          },
                          "\n",
                          "region=",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\n"
                        ]
                      ]
                    }
                  },
                  "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                    "content": {
                      "Fn::Join": [
                        "",
                        [
                          "[cfn-auto-reloader-hook]\n",
                          "triggers=post.update\n",
                          "path=Resources.WSFCNode1.Metadata.AWS::CloudFormation::Init\n",
                          "action=cfn-init.exe -v -s ",
                          {
                            "Ref": "AWS::StackId"
                          },
                          " -r EDGE1",
                          " --region ",
                          {
                            "Ref": "AWS::Region"
                          },
                          "\n"
                        ]
                      ]
                    }
                  },
                  "C:\\cfn\\modules\\AWSQuickStart.zip": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\Invoke-ADReplication.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Invoke-ADReplication.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\Rename-Computer.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\Join-Domain.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\Set-Dns.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\EnableCredSsp.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/EnableCredSsp.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\DisableCredSsp.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/DisableCredSsp.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Download-ExchangeKit.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-ExchangeKit.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Expand-Exchange.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Expand-Exchange.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Install-EdgePrerequisites.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-EdgePrerequisites.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\OpenWSFCPorts.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Install-ExchangeEdgeServer.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeEdgeServer.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Set-PrimaryDnsSuffix.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Set-PrimaryDnsSuffix.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Configure-EdgeDnsRecord.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-EdgeDnsRecord.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "c:\\cfn\\scripts\\Configure-UAC.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-UAC.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      },
                      "authentication": "S3AccessCreds"
                  },
                  "C:\\cfn\\scripts\\Download-NetFramework.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-NetFramework.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      }
                  },
                  "C:\\cfn\\scripts\\Install-NetFramework.ps1": {
                      "source": {
                          "Fn::Sub": [
                              "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NetFramework.ps1",
                              {
                                  "QSS3Region": {
                                      "Fn::If": [
                                          "GovCloudCondition",
                                          "s3-us-gov-west-1",
                                          "s3"
                                      ]
                                  }
                              }
                          ]
                      }
                  }
                },
                "services": {
                  "windows": {
                    "cfn-hup": {
                      "enabled": "true",
                      "ensureRunning": "true",
                      "files": [
                        "C:\\cfn\\cfn-hup.conf",
                        "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                      ]
                    }
                  }
                }
              },
              "configSets": {
                "config": [
                  "setup",
                  "Prep",
                  "Install",
                  "Cleanup",
                  "Finalize"
                ]
              }
            }
          },
          "Properties": {
            "Affinity": {
              "Fn::If": [
                "HostTypeIsDediHost",
                "host",
                {
                  "Fn::If": [
                    "HostTypeIsDefault",
                    {
                      "Ref": "AWS::NoValue"
                    },
                    "default"
                  ]
                }
              ]
            },
            "BlockDeviceMappings": [
              {
                "DeviceName": "/dev/sda1",
                "Ebs": {
                  "VolumeSize": "100",
                  "VolumeType": "gp2"
                }
              },
              {
                "DeviceName": "/dev/xvdca",
                "VirtualName": "ephemeral0"
              }
            ],
            "HostId": {
              "Fn::If": [
                "HostTypeIsDediHost",
                {
                  "Ref": "DedicatedHostIDNode1"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "ImageId": {
              "Fn::If": [
                "ByolAmi",
                {
                  "Ref": "DedicatedHostAMI"
                },
                {
                  "Fn::FindInMap": [
                    "AWSAMIRegionMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Fn::FindInMap": [
                        "ExchangeAMINameMap",
						  "AMI",
                        {
                          "Ref": "ExchangeServerVersion"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "IamInstanceProfile": {
                "Ref": "ExchangeProfile"
            },
            "InstanceType": {
              "Ref": "EdgeInstanceType"
            },
            "KeyName": {
              "Ref": "KeyPairName"
            },
            "NetworkInterfaces": [
              {
                "DeleteOnTermination": "true",
                "DeviceIndex": 0,
                "GroupSet": [
                  {
                    "Ref": "DomainMemberSGID"
                  },
                  {
                    "Ref": "WSFCSecurityGroup"
                  },
                  {
                    "Ref": "WSFCClientSecurityGroup"
                  }
                ],
                "PrivateIpAddresses": [
                  {
                    "Primary": "true",
                    "PrivateIpAddress": {
                      "Ref": "EdgeNode1PrivateIP1"
                    }
                  }
                ],
                "SubnetId": {
                  "Ref": "PublicSubnet1ID"
                }
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": {
                  "Ref": "EdgeNode1NetBIOSName"
                }
              }
            ],
            "Tenancy": {
              "Fn::If": [
                "HostTypeIsDediHost",
                "host",
                {
                  "Fn::If": [
                    "HostTypeIsDefault",
                    "default",
                    "dedicated"
                  ]
                }
              ]
            },
            "UserData": {
              "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "<script>\n",
                    "cfn-init.exe -v -c config -s ",
                    {
                      "Ref": "AWS::StackId"
                    },
                    " -r EDGE1 ",
                    " --region ",
                    {
                      "Ref": "AWS::Region"
                    },
                    "\n",
                    "</script>"
                  ]
                ]
              }
            }
          },
          "Type": "AWS::EC2::Instance"
        },
    "EdgeNode1EIP": {
            "Condition": "DeployEdge",
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "EDGE1"
                }
            }
        },
    "EDGE2": {
              "DependsOn": "WSFCNode1WaitCondition",
              "Condition": "DeployEdge",
              "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                            "Ref": "ExchangeRole"
                        },
                        "buckets": [
                            {
                                "Ref": "QSS3BucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                  "Cleanup": {
                    "commands": {
                      "a-disable-credssp": {
                        "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\DisableCredSsp.ps1\"",
                        "waitAfterCompletion": "0"
                      },
                      "b-enable-uac": {
                        "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Enable\"",
                        "waitAfterCompletion": "0"
                      }
                    }
                  },
                  "Finalize": {
                    "commands": {
                      "a-reboot": {
                        "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                        "waitAfterCompletion": "forever"
                      },
                      "b-signal-success": {
                        "command": "powershell -Command \"Write-AWSQuickStartStatus\""
                      }
                    }
                  },
                  "Install": {
                    "commands": {
                      "a-install-exchange-edge": {
                        "command": {
                          "Fn::Join": [
                              "",
                              [
                                  "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ExchangeEdgeServer.ps1 -EdgeNodeNetBIOSName '",
                                  {
                                      "Ref": "EdgeNode2NetBIOSName"
                                  },
                                  "' -DomainAdminPassword '",
                                  {
                                      "Ref": "DomainAdminPassword"
                                  },
                                  "' -ExchangeServerVersion '",
                                  {
                                      "Ref": "ExchangeServerVersion"
                                  },
                                  "'\""
                              ]
                          ]
                        },
                        "waitAfterCompletion": "0"
                      }
                    }
                  },
                  "Prep": {
                    "commands": {
                      "a-rename-computer": {
                        "command": {
                          "Fn::Join": [
                            "",
                            [
                              "powershell.exe -Command \"C:\\cfn\\scripts\\Rename-Computer.ps1 -Restart -NewName '",
                              {
                                "Ref": "EdgeNode2NetBIOSName"
                              },
                              "'\""
                            ]
                          ]
                        },
                        "waitAfterCompletion": "forever"
                      },
                      "b-install-edge-prerequisites": {
                        "command": {
                          "Fn::Join": [
                            "",
                            [
                              "powershell.exe -Command \"C:\\cfn\\scripts\\Install-EdgePrerequisites.ps1 -ExchangeServerVersion '",
                              {
                                "Ref": "ExchangeServerVersion"
                              },
                              "'\""
                            ]
                          ]
                        },
                        "waitAfterCompletion": "0"
                      },
                      "c-reset-local-admin": {
                                    "command": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "powershell.exe -command C:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1 -password '",
                                                {
                                                    "Ref": "DomainAdminPassword"
                                                },
                                                "'"
                                            ]
                                        ]
                                    },
                                    "waitAfterCompletion": "0"
                                },
                      "d-enable-credssp": {
                                  "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\EnableCredSsp.ps1",
                                  "waitAfterCompletion": "0"
                                },
                      "e-disable-uac": {
                                  "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Configure-UAC.ps1 -status Disable\"",
                                  "waitAfterCompletion": "0"
                                },
                      "f-reboot": {
                        "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                        "waitAfterCompletion": "forever"
                      },
                      "g-download-netframework": {
                        "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Download-NetFramework.ps1\"",
                        "waitAfterCompletion": "0"
                      },
                      "h-install-netframework": {
                        "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\Install-NetFramework.ps1\"",
                        "waitAfterCompletion": "60"
                      },
                      "i-reboot": {
                        "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                        "waitAfterCompletion": "forever"
                      },
                      "j-open-WSFC-ports": {
                        "command": "powershell.exe -ExecutionPolicy RemoteSigned -Command \"C:\\cfn\\scripts\\OpenWSFCPorts.ps1\"",
                        "waitAfterCompletion": "0"
                      },
                      "k-create-edge-dnsrecord": {
                        "command": {
                          "Fn::Join": [
                              "",
                              [
                                  "powershell.exe -Command \"C:\\cfn\\scripts\\Configure-EdgeDnsRecord.ps1 -EdgeNodeNetBIOSName '",
                                  {
                                      "Ref": "EdgeNode1NetBIOSName"
                                  },
                                  "' -EdgeNodePrivateIP '",
                                  {
                                      "Ref": "EdgeNode1PrivateIP1"
                                  },
                                  "' -DnsServer '",
                                  {
                                      "Ref": "ADServer1PrivateIP"
                                  },
                                  "' -DomainNetBIOSName '",
                                  {
                                      "Ref": "DomainDNSName"
                                  },
                                  "' -DomainAdminUser '",
                                  {
                                      "Ref": "DomainAdminUser"
                                  },
                                  "' -DomainAdminPassword '",
                                  {
                                      "Ref": "DomainAdminPassword"
                                  },

                                  "'\""
                              ]
                          ]
                        },
                        "waitAfterCompletion": "0"
                      },
                      "l-download-exchange-kit": {
                        "command": {
                          "Fn::Join": [
                            "",
                            [
                              "powershell.exe ",
                              "-ExecutionPolicy RemoteSigned ",
                              "-Command \"",
                              " C:\\cfn\\scripts\\Download-ExchangeKit.ps1 -ExchangeServerVersion '",
                              {
                                "Ref": "ExchangeServerVersion"
                              },
                              "'\""
                            ]
                          ]
                        },
                        "waitAfterCompletion": "0"
                      },
                      "m-expand-exchange-kit": {
                        "command": {
                          "Fn::Join": [
                            "",
                            [
                              "powershell.exe ",
                              "-ExecutionPolicy RemoteSigned ",
                              "-Command \"",
                              " C:\\cfn\\scripts\\Expand-Exchange.ps1 -ExchangeServerVersion '",
                              {
                                "Ref": "ExchangeServerVersion"
                              },
                              "'\""
                            ]
                          ]
                        },
                        "waitAfterCompletion": "0"
                      }
                    }
                  },
                  "setup": {
                    "commands": {
                      "a-set-execution-policy": {
                        "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                        "waitAfterCompletion": "0"
                      },
                      "b-unpack-quickstart-module": {
                        "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                        "waitAfterCompletion": "0"
                      },
                      "c-init-quickstart-module": {
                        "command": {
                          "Fn::Join": [
                            "",
                            [
                              "powershell.exe -Command \"",
                              "New-AWSQuickStartWaitHandle -Handle '",
                              {
                                "Ref": "EdgeNode1WaitHandle"
                              },
                              "'\""
                            ]
                          ]
                        },
                        "waitAfterCompletion": "0"
                      }
                    },
                    "files": {
                      "c:\\cfn\\cfn-hup.conf": {
                        "content": {
                          "Fn::Join": [
                            "",
                            [
                              "[main]\n",
                              "stack=",
                              {
                                "Ref": "AWS::StackId"
                              },
                              "\n",
                              "region=",
                              {
                                "Ref": "AWS::Region"
                              },
                              "\n"
                            ]
                          ]
                        }
                      },
                      "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                        "content": {
                          "Fn::Join": [
                            "",
                            [
                              "[cfn-auto-reloader-hook]\n",
                              "triggers=post.update\n",
                              "path=Resources.WSFCNode1.Metadata.AWS::CloudFormation::Init\n",
                              "action=cfn-init.exe -v -s ",
                              {
                                "Ref": "AWS::StackId"
                              },
                              " -r EDGE2",
                              " --region ",
                              {
                                "Ref": "AWS::Region"
                              },
                              "\n"
                            ]
                          ]
                        }
                      },
                      "C:\\cfn\\modules\\AWSQuickStart.zip": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/modules/AWSQuickStart.zip",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Unzip-Archive.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\Invoke-ADReplication.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Invoke-ADReplication.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\Rename-Computer.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Rename-Computer.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\Join-Domain.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Join-Domain.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\Set-Dns.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/Set-Dns.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\EnableCredSsp.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/EnableCredSsp.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\DisableCredSsp.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-utilities/scripts/DisableCredSsp.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Download-ExchangeKit.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-ExchangeKit.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Expand-Exchange.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Expand-Exchange.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Install-EdgePrerequisites.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-EdgePrerequisites.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\OpenWSFCPorts.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/OpenWSFCPorts.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Install-ExchangeEdgeServer.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-ExchangeEdgeServer.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Set-PrimaryDnsSuffix.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Set-PrimaryDnsSuffix.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Configure-EdgeDnsRecord.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-EdgeDnsRecord.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Reset-LocalAdminPassword.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Reset-LocalAdminPassword.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "c:\\cfn\\scripts\\Configure-UAC.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Configure-UAC.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          },
                          "authentication": "S3AccessCreds"
                      },
                      "C:\\cfn\\scripts\\Download-NetFramework.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Download-NetFramework.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          }
                      },
                      "C:\\cfn\\scripts\\Install-NetFramework.ps1": {
                          "source": {
                              "Fn::Sub": [
                                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/Install-NetFramework.ps1",
                                  {
                                      "QSS3Region": {
                                          "Fn::If": [
                                              "GovCloudCondition",
                                              "s3-us-gov-west-1",
                                              "s3"
                                          ]
                                      }
                                  }
                              ]
                          }
                      }
                    },
                    "services": {
                      "windows": {
                        "cfn-hup": {
                          "enabled": "true",
                          "ensureRunning": "true",
                          "files": [
                            "C:\\cfn\\cfn-hup.conf",
                            "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                          ]
                        }
                      }
                    }
                  },
                  "configSets": {
                    "config": [
                      "setup",
                      "Prep",
                      "Install",
                      "Cleanup",
                      "Finalize"
                    ]
                  }
                }
              },
              "Properties": {
                "Affinity": {
                  "Fn::If": [
                    "HostTypeIsDediHost",
                    "host",
                    {
                      "Fn::If": [
                        "HostTypeIsDefault",
                        {
                          "Ref": "AWS::NoValue"
                        },
                        "default"
                      ]
                    }
                  ]
                },
                "BlockDeviceMappings": [
                  {
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                      "VolumeSize": "100",
                      "VolumeType": "gp2"
                    }
                  },
                  {
                    "DeviceName": "/dev/xvdca",
                    "VirtualName": "ephemeral0"
                  }
                ],
                "HostId": {
                  "Fn::If": [
                    "HostTypeIsDediHost",
                    {
                      "Ref": "DedicatedHostIDNode1"
                    },
                    {
                      "Ref": "AWS::NoValue"
                    }
                  ]
                },
                "IamInstanceProfile": {
                    "Ref": "ExchangeProfile"
                },
                "ImageId": {
                  "Fn::If": [
                    "ByolAmi",
                    {
                      "Ref": "DedicatedHostAMI"
                    },
                    {
                      "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Fn::FindInMap": [
                            "ExchangeAMINameMap",
							"AMI",
                            {
                              "Ref": "ExchangeServerVersion"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                "InstanceType": {
                  "Ref": "EdgeInstanceType"
                },
                "KeyName": {
                  "Ref": "KeyPairName"
                },
                "NetworkInterfaces": [
                  {
                    "DeleteOnTermination": "true",
                    "DeviceIndex": 0,
                    "GroupSet": [
                      {
                        "Ref": "DomainMemberSGID"
                      },
                      {
                        "Ref": "WSFCSecurityGroup"
                      },
                      {
                        "Ref": "WSFCClientSecurityGroup"
                      }
                    ],
                    "PrivateIpAddresses": [
                      {
                        "Primary": "true",
                        "PrivateIpAddress": {
                          "Ref": "EdgeNode2PrivateIP1"
                        }
                      }
                    ],
                    "SubnetId": {
                      "Ref": "PublicSubnet2ID"
                    }
                  }
                ],
                "Tags": [
                  {
                    "Key": "Name",
                    "Value": {
                      "Ref": "EdgeNode2NetBIOSName"
                    }
                  }
                ],
                "Tenancy": {
                  "Fn::If": [
                    "HostTypeIsDediHost",
                    "host",
                    {
                      "Fn::If": [
                        "HostTypeIsDefault",
                        "default",
                        "dedicated"
                      ]
                    }
                  ]
                },
                "UserData": {
                  "Fn::Base64": {
                    "Fn::Join": [
                      "",
                      [
                        "<script>\n",
                        "cfn-init.exe -v -c config -s ",
                        {
                          "Ref": "AWS::StackId"
                        },
                        " -r EDGE2 ",
                        " --region ",
                        {
                          "Ref": "AWS::Region"
                        },
                        "\n",
                        "</script>"
                      ]
                    ]
                  }
                }
              },
              "Type": "AWS::EC2::Instance"
            },
    "EdgeNode2EIP": {
                    "Condition": "DeployEdge",
                    "Type": "AWS::EC2::EIP",
                    "Properties": {
                        "Domain": "vpc",
                        "InstanceId": {
                            "Ref": "EDGE2"
                        }
                    }
                },
    "WSFCSecurityGroup": {
      "Properties": {
        "GroupDescription": "Enable the WSFC and Exchange communications",
        "VpcId": {
          "Ref": "VPCID"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "WSFCSecurityGroupIngressIcmp": {
      "Properties": {
        "FromPort": "-1",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "icmp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "-1"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp135": {
      "Properties": {
        "FromPort": "135",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "135"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp137": {
      "Properties": {
        "FromPort": "137",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "137"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp1433": {
      "Properties": {
        "FromPort": "1433",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "1434"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp3343": {
      "Properties": {
        "FromPort": "3343",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "3343"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp445": {
      "Properties": {
        "FromPort": "445",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "445"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp5022": {
      "Properties": {
        "FromPort": "5022",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "5022"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressTcp5985": {
      "Properties": {
        "FromPort": "5985",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "5985"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressUdp137": {
      "Properties": {
        "FromPort": "137",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "udp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "137"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressUdp1434": {
      "Properties": {
        "FromPort": "1434",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "udp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "1434"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "WSFCSecurityGroupIngressUdp3343": {
      "Properties": {
        "FromPort": "3343",
        "GroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "IpProtocol": "udp",
        "SourceSecurityGroupId": {
          "Ref": "WSFCSecurityGroup"
        },
        "ToPort": "3343"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "ExchangeRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
            "Policies": [
                {
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "s3:GetObject"
                                ],
                                "Resource": {
                                    "Fn::Sub": [
                                        "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                                        {
                                            "Partition": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "aws-us-gov",
                                                    "aws"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "Effect": "Allow"
                            }
                        ]
                    },
                    "PolicyName": "aws-quick-start-s3-policy"
                },
                {
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Action": [
                                    "ec2:AssociateAddress",
                                    "ec2:DescribeAddresses"
                                ],
                                "Resource": [
                                    "*"
                                ],
                                "Effect": "Allow"
                            }
                        ]
                    },
                    "PolicyName": "exchange-eip-policy"
                }
            ],
            "Path": "/",
            "AssumeRolePolicyDocument": {
                "Statement": [
                    {
                        "Action": [
                            "sts:AssumeRole"
                        ],
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com"
                            ]
                        },
                        "Effect": "Allow"
                    }
                ],
                "Version": "2012-10-17"
            }
        }
    },
    "ExchangeProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
            "Roles": [
                {
                    "Ref": "ExchangeRole"
                }
            ],
            "Path": "/"
        }
    }
  },
  "Rules": {
    "SubnetsInVPC": {
      "Assertions": [
        {
          "Assert": {
            "Fn::EachMemberIn": [
              {
                "Fn::ValueOfAll": [
                  "AWS::EC2::Subnet::Id",
                  "VpcId"
                ]
              },
              {
                "Fn::RefAll": "AWS::EC2::VPC::Id"
              }
            ]
          },
          "AssertDescription": "All subnets must in the VPC"
        }
      ]
    }
  }
}
